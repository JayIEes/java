package day0113;

/**
 * 행마다 열의 개수가 다른 배열
 * @author user
 */
public class VariableArraay {

	public VariableArraay() {
		
		//1.선언) 데이터형[][] 배열명=null;
		int[][] arr=null; //선언만 가지고는 이차원인지 가변인지 구분 어렵
		
		//2.생성) 배열명=new 데이터형[행의 수][]; //열의 개수는 설정하지 않는다.
		arr=new int[5][]; //열의 수를 줘버리면 그냥 잍차원 배열이 됨
		
		//3. 행마다 열을 생성) 배열명[행의번호]=new 데이터형[열의 수];
		arr[0]=new int[4]; // heap이 만들어지면서 초기화가 됨
		arr[1]=new int[3];
		arr[2]=new int[1];
		arr[3]=new int[] {1,2,3,4,5};
		arr[4]=new int[]{10,20,30};
		
		for(int i=0 ; i<arr.length; i++) {
			System.out.println("arr["+i+"]행, 열의 개수: "+arr[i].length);
		}//end for
		
		//4.값 할당) -인덱스 주의!
		arr[0][0]=100;
		arr[1][1]=200;
		
		
		//5. 값 사용) -인덱스 주의!
		System.out.println(arr[0][0]+"/"+arr[0][1]);
		
		//일괄처리
		for(int i=0 ; i<arr.length; i++) { // 행
			for(int j=0 ; j<arr[i].length; j++) {//열
				System.out.printf("arr[%d][%d]=%d\t",i, j,arr[i][j]);
			}//end for
			System.out.println();
		}//end for
	System.out.println("-----------------------------");	
	//기본형 형식의 사용 : 행 구분괄호에서 값의 개수를 다르게 묶는다.
	int[][] arr2= { {10,20,30} , {40} , {50,60,70,80} };
	
		for(int i=0 ; i<arr2.length; i++) {//열
			System.out.println("arr2["+i+"]행, 열의 개수: "+arr2[i].length);
			}//end for
			
		//개선된 for
		for(int[] tempArr1 : arr2) {
			for(int value : tempArr1) {
				System.out.printf("%-4d", value);
			}
			System.out.println();
		}//end for
		
//		int[] temp=arr2[0]; //이차원 배열의 형을 일차원배열에 넣을 수 있다.
		temp(arr2[0]);//이차원 배열의 형은 일차원배열로 이뤄져 있다.
	
	}//VariableArraay 생성자
	
	
	public void temp(int[] arr) {
		for(int i=0; i<arr.length ; i++) {
			System.out.println(arr[i]);
		}//end for
	}//temp
	
	
	
	
	
	
	
	public static void main(String[] args) {

		new VariableArraay();
		
		
		
		
	}//main

}//class
